Only in 01/bootload/: .ld.scr~.swp
diff -c 01/bootload/Makefile 02/bootload/Makefile
*** 01/bootload/Makefile	Thu Dec 14 07:04:12 2017
--- 02/bootload/Makefile	Wed Dec 20 06:19:54 2017
***************
*** 17,24 ****
  
  # FreeBSD-4.x:/dev/cuaaX, FreeBSD-6.x:/dev/cuadX, FreeBSD(USB):/dev/cuaUx
  # Linux:/dev/ttySx, Linux(USB):/dev/ttyUSBx, Windows:comX
! #H8WRITE_SERDEV = /dev/cuad0
! H8WRITE_SERDEV = com1
  
  OBJS  = vector.o startup.o main.o
  OBJS += lib.o serial.o
--- 17,23 ----
  
  # FreeBSD-4.x:/dev/cuaaX, FreeBSD-6.x:/dev/cuadX, FreeBSD(USB):/dev/cuaUx
  # Linux:/dev/ttySx, Linux(USB):/dev/ttyUSBx, Windows:comX
! H8WRITE_SERDEV = /dev/cuad0
  
  OBJS  = vector.o startup.o main.o
  OBJS += lib.o serial.o
***************
*** 27,33 ****
  
  CFLAGS = -Wall -mh -nostdinc -nostdlib -fno-builtin
  #CFLAGS += -mint32 # intを32ビットにすると掛算／割算ができなくなる
! FLAGS += -I.
  #CFLAGS += -g
  CFLAGS += -Os
  CFLAGS += -DKZLOAD
--- 26,32 ----
  
  CFLAGS = -Wall -mh -nostdinc -nostdlib -fno-builtin
  #CFLAGS += -mint32 # intを32ビットにすると掛算／割算ができなくなる
! CFLAGS += -I.
  #CFLAGS += -g
  CFLAGS += -Os
  CFLAGS += -DKZLOAD
Only in 01/bootload/: Makefile~
Only in 01/bootload/: kzload
Only in 01/bootload/: kzload.elf
Only in 01/bootload/: kzload.mot
diff -c 01/bootload/ld.scr 02/bootload/ld.scr
*** 01/bootload/ld.scr	Wed Dec 13 06:48:12 2017
--- 02/bootload/ld.scr	Wed Dec 20 06:20:04 2017
***************
*** 1,4 ****
! OUTPUT_FORMAT("elf32-h8300")
  OUTPUT_ARCH(h8300h)
  ENTRY("_start")
  
--- 1,4 ----
! /* OUTPUT_FORMAT("elf32-h8300") */
  OUTPUT_ARCH(h8300h)
  ENTRY("_start")
  
Only in 01/bootload/: ld.scr~
diff -c 01/bootload/lib.c 02/bootload/lib.c
*** 01/bootload/lib.c	Wed Dec 13 06:28:40 2017
--- 02/bootload/lib.c	Wed Dec 20 06:20:07 2017
***************
*** 2,7 ****
--- 2,77 ----
  #include "serial.h"
  #include "lib.h"
  
+ void *memset(void *b, int c, long len)
+ {
+   char *p;
+   for (p = b; len > 0; len--)
+     *(p++) = c;
+   return b;
+ }
+ 
+ void *memcpy(void *dst, const void *src, long len)
+ {
+   char *d = dst;
+   const char *s = src;
+   for (; len > 0; len--)
+     *(d++) = *(s++);
+   return dst;
+ }
+ 
+ int memcmp(const void *b1, const void *b2, long len)
+ {
+   const char *p1 = b1, *p2 = b2;
+   for (; len > 0; len--) {
+     if (*p1 != *p2)
+       return (*p1 > *p2) ? 1 : -1;
+     p1++;
+     p2++;
+   }
+   return 0;
+ }
+ 
+ int strlen(const char *s)
+ {
+   int len;
+   for (len = 0; *s; s++, len++)
+     ;
+   return len;
+ }
+ 
+ char *strcpy(char *dst, const char *src)
+ {
+   char *d = dst;
+   for (;; dst++, src++) {
+     *dst = *src;
+     if (!*src) break;
+   }
+   return d;
+ }
+ 
+ int strcmp(const char *s1, const char *s2)
+ {
+   while (*s1 || *s2) {
+     if (*s1 != *s2)
+       return (*s1 > *s2) ? 1 : -1;
+     s1++;
+     s2++;
+   }
+   return 0;
+ }
+ 
+ int strncmp(const char *s1, const char *s2, int len)
+ {
+   while ((*s1 || *s2) && (len > 0)) {
+     if (*s1 != *s2)
+       return (*s1 > *s2) ? 1 : -1;
+     s1++;
+     s2++;
+     len--;
+   }
+   return 0;
+ }
+ 
  /* １文字送信 */
  int putc(unsigned char c)
  {
***************
*** 15,19 ****
--- 85,112 ----
  {
    while (*str)
      putc(*(str++));
+   return 0;
+ }
+ 
+ /* 数値の16進表示 */
+ int putxval(unsigned long value, int column)
+ {
+   char buf[9];
+   char *p;
+ 
+   p = buf + sizeof(buf) - 1;
+   *(p--) = '\0';
+ 
+   if (!value && !column)
+     column++;
+ 
+   while (value || column) {
+     *(p--) = "0123456789abcdef"[value & 0xf];
+     value >>= 4;
+     if (column) column--;
+   }
+ 
+   puts(p + 1);
+ 
    return 0;
  }
diff -c 01/bootload/lib.h 02/bootload/lib.h
*** 01/bootload/lib.h	Wed Dec 13 06:28:45 2017
--- 02/bootload/lib.h	Wed Dec 20 06:20:10 2017
***************
*** 1,7 ****
--- 1,16 ----
  #ifndef _LIB_H_INCLUDED_
  #define _LIB_H_INCLUDED_
  
+ void *memset(void *b, int c, long len);
+ void *memcpy(void *dst, const void *src, long len);
+ int memcmp(const void *b1, const void *b2, long len);
+ int strlen(const char *s);
+ char *strcpy(char *dst, const char *src);
+ int strcmp(const char *s1, const char *s2);
+ int strncmp(const char *s1, const char *s2, int len);
+ 
  int putc(unsigned char c);    /* １文字送信 */
  int puts(unsigned char *str); /* 文字列送信 */
+ int putxval(unsigned long value, int column); /* 数値の16進表示 */
  
  #endif
Only in 01/bootload/: lib.o
diff -c 01/bootload/main.c 02/bootload/main.c
*** 01/bootload/main.c	Wed Dec 13 06:28:48 2017
--- 02/bootload/main.c	Wed Dec 20 06:20:12 2017
***************
*** 8,13 ****
--- 8,16 ----
  
    puts("Hello World!\n");
  
+   putxval(0x10, 0);   puts("\n");
+   putxval(0xffff, 0); puts("\n");
+ 
    while (1)
      ;
  
Only in 01/bootload/: main.o
Only in 01/bootload/: serial.o
Only in 01/bootload/: startup.o
diff -c 01/bootload/startup.s 02/bootload/startup.s
*** 01/bootload/startup.s	Wed Dec 13 06:33:05 2017
--- 02/bootload/startup.s	Wed Dec 20 06:20:27 2017
***************
*** 1,7 ****
  	.h8300h
  	.section .text
  	.global	_start
! 	.type	_start,@function
  _start:
  	mov.l	#0xffff00,sp
  	jsr	@_main
--- 1,7 ----
  	.h8300h
  	.section .text
  	.global	_start
! #	.type	_start,@function
  _start:
  	mov.l	#0xffff00,sp
  	jsr	@_main
Only in 01/bootload/: startup.s~
Only in 01/bootload/: vector.o
